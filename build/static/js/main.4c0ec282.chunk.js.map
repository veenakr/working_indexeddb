{"version":3,"sources":["config.js","services/_services.js","helpers/auth-header.js","helpers/history.js","actions/_actions.js","components/Login.js","components/Dashboard.js","components/SignUp.js","reducers/auth.js","reducers/_reducers.js","reducers/userReducers.js","store/configureStore.js","components/Table.js","components/OtherUsers.js","components/Error.js","App.js","serviceWorker.js","helpers/_helpers.js","index.js"],"names":["config","apiUrl","userService","login","email","password","requestOptions","method","headers","Content-Type","body","JSON","stringify","fetch","concat","then","handleResponse","user","token","localStorage","setItem","logout","getAll","parse","getItem","Authorization","authHeader","removeItem","response","text","data","ok","status","error","message","statusText","Promise","reject","history","createBrowserHistory","userActions","dispatch","type","success","push","failure","console","log","pathname","state","users","Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","submitted","err","handleCancel","bind","assertThisInitialized","handleSubmit","onSignUp","onEmailChange","onPasswordChange","e","preventDefault","setState","_this$state","document","getElementById","reset","target","value","_this$state2","react_default","a","createElement","className","id","name","action","onSubmit","placeholder","onChange","onClick","React","Component","connect","loggedIn","authentication","DashBoard","firstName","Link","to","handleLogout","SignUp","handleChange","handleSignUp","handleGoHome","defineProperty","window","indexedDB","db","tx","store","request","open","onupgradeneeded","result","createObjectStore","keyPath","autoIncrement","createIndex","unique","onerror","errorCode","onsuccess","transaction","objectStore","index","put","oncomplete","close","location","reload","confirmPassword","firstname","lastname","required","initialState","arguments","length","undefined","loggingIn","rootReducer","combineReducers","loading","items","persistConfig","key","storage","persistedReducer","persistReducer","createStore","applyMiddleware","thunkMiddleware","persistor","persistStore","Meta","Card","Table1","checked","getState","style","background","padding","card","title","bordered","width","lastName","marginTop","hoverable","cover","alt","src","description","row","gutter","col","span","es_switch","avatar","actions","icon","skeleton","active","OtherUsers","filtersID","filtersEmail","filtersFirstName","filtersLastName","actualUser","usersArr","filter","map","columns","dataIndex","sorter","b","filters","filterMultiple","onFilter","record","indexOf","dataSource","table","Error","App","user1","Router","Route","path","exact","component","Table","Error1","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","q1","realFetch","url","opts","resolve","setTimeout","endsWith","params","filteredUsers","responseJson","configureFakeBackend","ReactDOM","render","es","integration_react","src_App","URL","process","origin","addEventListener","get","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4c0ec282.chunk.js","sourcesContent":["export const config = {\r\n        apiUrl: 'http://localhost:4000'\r\n    }\r\n\r\n","import { config } from '../config';\r\nimport { authHeader } from '../helpers/auth-header';\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    getAll\r\n}\r\n\r\n\r\nfunction login(email, password) {\r\n\r\n    const requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json'},\r\n        body: JSON.stringify({ email, password })\r\n    }\r\n\r\n    return fetch(`${config.apiUrl}/users/authenticate`, requestOptions)\r\n    .then(handleResponse)\r\n    .then(user => {\r\n        if(user.token) {\r\n            localStorage.setItem('user', JSON.stringify(user));\r\n        }\r\n        return user;\r\n    })\r\n}\r\n\r\nfunction logout () {\r\n    localStorage.removeItem('user');\r\n}\r\n\r\nfunction getAll() {\r\n    const requestOptions = {\r\n        method: 'GET',\r\n        headers: authHeader()\r\n    };\r\n\r\n    return fetch(`${config.apiUrl}/users`, requestOptions).then(handleResponse);\r\n}\r\n\r\nfunction handleResponse(response) {\r\n    return response.text().then(text => {\r\n        const data = text && JSON.parse(text);\r\n        if (!response.ok) {\r\n            if (response.status === 401) {\r\n                // auto logout if 401 response returned from api\r\n                logout();\r\n                //location.reload(true);\r\n            }\r\n\r\n            const error = (data && data.message) || response.statusText;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        return data;\r\n    });\r\n}\r\n","export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem('user'));\r\n\r\n    if (user && user.token) {\r\n        return { 'Authorization': 'Bearer ' + user.token };\r\n    } else {\r\n        return {};\r\n    }\r\n}","import { createBrowserHistory } from 'history';\r\n\r\nexport const history = createBrowserHistory();","import { userService } from '../services/_services';\r\nimport { history } from '../helpers/history';\r\n\r\nexport const userActions = {\r\n    login,\r\n    logout,\r\n    getAll\r\n};\r\n\r\n// export const addUser = (user) => {\r\n//     return ({\r\n//     type: 'ADD_USER',\r\n//     user\r\n// })};\r\n\r\n// export const startAddUser = (userData = {}) => {\r\n//     return (dispatch) => {\r\n//         const user = userData;\r\n\r\n//         database.ref('users').push(user).then(ref => {\r\n//             dispatch(addUser({\r\n//                 id: ref.key,\r\n//                 ...user\r\n//             }))\r\n//         })\r\n//     }\r\n// }\r\n\r\nfunction login(email, password) {\r\n    return dispatch => {\r\n        dispatch(request({ email }));\r\n\r\n        userService.login(email, password)\r\n            .then(\r\n                user => { \r\n                    dispatch(success(user));\r\n                    history.push('/');\r\n                },\r\n                error => {\r\n                    dispatch(failure(error));\r\n                    console.log(error);\r\n                    history.push({\r\n                        pathname: '/error',\r\n                        state: error\r\n                    })\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: 'LOGIN_REQUEST', user } }\r\n    function success(user) { return { type: 'LOGIN_SUCCESS', user } }\r\n    function failure(error) { return { type: 'LOGIN_FAILURE', error } }\r\n}\r\n\r\nfunction logout() {\r\n    userService.logout();\r\n    return { type: 'LOGOUT' };\r\n}\r\n\r\nfunction getAll() {\r\n    return dispatch => {\r\n        dispatch(request());\r\n\r\n        userService.getAll()\r\n            .then(\r\n                users => dispatch(success(users)),\r\n                error => dispatch(failure(error))\r\n            );\r\n    };\r\n\r\n    function request() { return { type: 'GETALL_REQUEST' } }\r\n    function success(users) { return { type: 'GETALL_SUCCESS', users } }\r\n    function failure(error) { return { type: 'GETALL_FAILURE', error } }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {  userActions } from '../actions/_actions';\r\n\r\nclass Login extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.props.dispatch(userActions.logout());\r\n\r\n        this.state = {\r\n            email: \"\",\r\n            password: \"\",\r\n            submitted: false,\r\n            err: \"\"\r\n        }\r\n\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.onSignUp = this.onSignUp.bind(this);\r\n        \r\n        this.onEmailChange = this.onEmailChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n    };\r\n\r\n\r\n\r\n    handleSubmit (e) {\r\n        e.preventDefault();\r\n        this.setState({ submitted: true });\r\n        const { email, password } = this.state;\r\n        const { dispatch } = this.props;\r\n\r\n        if(email === \"\" && password === \"\"){\r\n            this.setState(() => ({\r\n                err: \"Please enter email / password\"\r\n            }));\r\n        }\r\n        else if( email === \"\"){\r\n            this.setState(() => ({\r\n                err: \"Please enter email\"\r\n            }));\r\n        } \r\n        else if( password === \"\"){\r\n            this.setState(() => ({\r\n                err: \"Please enter password\"\r\n            }));\r\n        } else {\r\n            if( email && password ) {\r\n                dispatch(userActions.login(email, password))\r\n                \r\n            }\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    handleCancel (e) {\r\n        this.setState(() => ({\r\n            email: \"\",\r\n            password: \"\"\r\n        }));\r\n        let form = document.getElementById(\"login-page\");\r\n        form.reset();\r\n    }\r\n\r\n    onEmailChange (e) {\r\n        const email = e.target.value;\r\n        this.setState(() => ({\r\n            email\r\n        }));\r\n    }\r\n\r\n    onPasswordChange (e) {\r\n        const password = e.target.value;\r\n        this.setState(() => ({\r\n            password\r\n        }));\r\n    }\r\n\r\n    onSignUp() {\r\n        this.props.history.push('/signup');\r\n    }\r\n\r\n    render() {\r\n        const { email, password , err} = this.state;\r\n        return (\r\n            <div className=\"main\">\r\n                <form id=\"login-page\" name=\"form\" action=\"action_page.php\" onSubmit={this.handleSubmit}>\r\n                    <label><b>Email Id</b></label>\r\n                    <br />\r\n                    <input type=\"text\" placeholder=\"Enter email\" name=\"uname\" value={email} onChange={this.onEmailChange}/>\r\n\r\n                    <br />\r\n                    <label><b>Password</b></label>\r\n                    <br />\r\n                    <input type=\"password\" placeholder=\"Enter Password\" name=\"psw\" value={password} onChange={this.onPasswordChange}/>\r\n\r\n                    <br />\r\n                    {err && <p className=\"error\">{err}</p>}\r\n                    <button className=\"loginButton\" type=\"submit\">Login</button>\r\n\r\n                </form>\r\n                <button className=\"cancelbtn\" onClick={this.handleCancel}>clear</button>\r\n                <button className=\"loginButton\" type=\"submit\" onClick={this.onSignUp}>SignUp</button>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { loggedIn } = state.authentication;\r\n    return {\r\n        loggedIn\r\n    }\r\n}\r\n \r\n export default connect(mapStateToProps)(Login);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { userActions } from '../actions/_actions';\r\n\r\nclass DashBoard extends React.Component{\r\n    componentDidMount() {\r\n        this.props.dispatch(userActions.getAll());\r\n    }\r\n\r\n    handleLogout() {\r\n        this.props.dispatch(userActions.logout());\r\n    }\r\n\r\n    handleUserInfo() {\r\n        console.log(this.props.user);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n            <h1 className=\"header\">Successfully Logged in!!!</h1>\r\n            <h3>Welcome {this.props.user.firstName}</h3>\r\n            <br />\r\n            <br />\r\n            <Link to=\"/userInfo\">Click here to know Your Information</Link>\r\n            <br />\r\n            <br />\r\n            <Link to=\"/other\">Click here to view Other Users</Link>\r\n            <br /><br />\r\n            <Link onClick={this.handleLogout.bind(this)} className=\"cancelbtn\" to=\"/\">Logout</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const { users, authentication } = state;\r\n    const { user } = authentication;\r\n    return {\r\n        user,\r\n        users\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashBoard);","import React from 'react';\r\nimport { history } from '../helpers/history';\r\n\r\nclass SignUp extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            \r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSignUp = this.handleSignUp.bind(this);\r\n        this.handleCancel = this.handleCancel.bind(this);\r\n        this.handleGoHome = this.handleGoHome.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    handleSignUp(e) {\r\n        const user = this.state;\r\n        e.preventDefault();\r\n\r\n        if(!window.indexedDB) {\r\n            console.log(\"Not supported\");\r\n        }\r\n\r\n        let request = window.indexedDB.open(\"LoginPage4\", 1),\r\n            db,\r\n            tx,\r\n            store,\r\n            index;\r\n\r\n        request.onupgradeneeded = function(e) {\r\n            db = request.result;\r\n            store = db.createObjectStore('UserDataStore', { keyPath: 'id', autoIncrement: true});\r\n            index = store.createIndex(\"firstName\", \"firstName\", { unique: false });\r\n        }\r\n\r\n        request.onerror = function(e) {\r\n            console.log(\"There was an error: \"+ e.target.errorCode);\r\n        }\r\n\r\n        request.onsuccess = function(e) {\r\n            let db = request.result;\r\n            tx = db.transaction(\"UserDataStore\", \"readwrite\");\r\n            store = tx.objectStore(\"UserDataStore\");\r\n            index = store.index(\"firstName\");\r\n\r\n        \r\n            db.onerror = function(e) {\r\n                console.log(\"Error: \"+e.target.errorCode);\r\n            }\r\n\r\n            store.put(user);\r\n\r\n            let q1 = store.getAll();\r\n\r\n            q1.onsuccess = function(e) {\r\n                // console.log(q1.result);\r\n            }\r\n\r\n            tx.oncomplete = function() {\r\n                db.close()       \r\n            }\r\n        }\r\n\r\n        this.props.history.push('/');\r\n        window.location.reload();\r\n\r\n    }\r\n\r\n    handleGoHome (e) {\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    handleCancel (e) {\r\n        e.preventDefault();\r\n        this.setState({\r\n            email: \"\",\r\n            password: \"\",\r\n            confirmPassword: \"\",\r\n            firstname: \"\",\r\n            lastname: \"\"\r\n        });\r\n        let form = document.getElementById(\"login-page\");\r\n        form.reset();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                    <h2>Sign Up</h2>\r\n                    <br />\r\n                    <button className=\"home\" onClick={this.handleGoHome}>Home</button>\r\n                    <form id=\"login-page\" onSubmit={this.handleSignUp}>\r\n                        <label><b>First Name</b></label><br />\r\n                        <input className=\"form-item\" type=\"text\" placeholder=\"Enter Firstname\" name=\"firstName\" onChange={this.handleChange} required/>\r\n                        <br />\r\n\r\n                        <label><b>Last Name</b></label><br />\r\n                        <input className=\"form-item\" type=\"text\" placeholder=\"Enter Lastname\" name=\"lastName\" onChange={this.handleChange} />\r\n                        <br />\r\n\r\n                        <label><b>Email Id</b></label><br />\r\n                        <input className=\"form-item\" type=\"text\" placeholder=\"Enter Email\" name=\"email\" onChange={this.handleChange} required/>\r\n                        <br />\r\n\r\n                        <label><b>Password</b></label><br />\r\n                        <input className=\"form-item\" type=\"password\" placeholder=\"Enter Password\" name=\"password\" onChange={this.handleChange} required/>\r\n                        <br />\r\n\r\n                        <label><b>Confirm Password</b></label><br />\r\n                        <input className=\"form-item\" type=\"password\" placeholder=\"Enter Password\" name=\"confirmPassword\" onChange={this.handleChange} required/>\r\n                        <br />\r\n                        <p className=\"err\">{this.state.error}</p>\r\n                        <button className=\"loginButton\" type=\"submit\" name=\"submit\">SignUp</button>\r\n                        <button className=\"cancelbtn\" onClick={this.handleCancel}>clear</button>\r\n                    </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default SignUp;","let user = JSON.parse(localStorage.getItem('user'));\r\nconst initialState = user ? { loggedIn: true, user } : {};\r\n\r\n function authentication(state = initialState, action) {\r\n    switch (action.type) {\r\n    case 'LOGIN_REQUEST':\r\n        return {\r\n        loggingIn: true,\r\n        user: action.user\r\n        };\r\n    case 'LOGIN_SUCCESS':\r\n        return {\r\n        loggedIn: true,\r\n        user: action.user\r\n        };\r\n    case 'LOGIN_FAILURE':\r\n        return {};\r\n    case 'LOGOUT':\r\n        return {};\r\n    default:\r\n        return state\r\n    }\r\n}\r\n\r\nexport default authentication;","import { combineReducers } from 'redux';\r\n\r\nimport authentication from './auth';\r\nimport { users } from './userReducers';\r\n\r\nconst rootReducer = combineReducers({\r\n  authentication,\r\n  users\r\n});\r\n\r\nexport default rootReducer;","export const users = (state={}, action) => {\r\n    switch(action.type) {\r\n        case 'GETALL_REQUEST':\r\n            return {\r\n                loading: true\r\n            }\r\n\r\n        case 'GETALL_SUCCESS':\r\n            return {\r\n                items: action.users\r\n            }\r\n\r\n        case 'GETALL_FAILURE':\r\n            return {\r\n                error: action.error\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport rootReducer from '../reducers/_reducers';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n  }\r\n   \r\n  const persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n  export const store = createStore(persistedReducer,applyMiddleware(thunkMiddleware) );\r\n\r\n  export const persistor = persistStore(store);\r\n   \r\n//   export default () => {\r\n//     let store = createStore(persistedReducer)\r\n//     let persistor = persistStore(store)\r\n//     return { store, persistor }\r\n//   }\r\n\r\n  \r\n// export const store = createStore(\r\n//     rootReducer,\r\n//     applyMiddleware(\r\n//         thunkMiddleware\r\n//     )\r\n// );","import React from 'react';\nimport { Card, Col, Row, Skeleton, Switch, Icon, Avatar } from 'antd';\nimport 'antd/lib/card/style/css';\nimport 'antd/lib/col/style/css';\nimport 'antd/lib/row/style/css';\nimport 'antd/lib/skeleton/style/css';\nimport 'antd/lib/switch/style/css';\nimport 'antd/lib/icon/style/css';\nimport 'antd/lib/avatar/style/css';\nimport {store} from '../store/configureStore';\n\nconst { Meta } = Card;\n\n\nclass Table1 extends React.Component {\n  state = {\n    loading: true\n  }\n\n  onChange = (checked) => {\n    this.setState({ loading: !checked });\n  }\n\n    render() {\n      const { loading } = this.state;\n      const user = store.getState();\n        return (\n          <div>\n            <h3 className=\"display\">Displaying User information in different card patterns</h3>\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\n            <Card title=\"User information (No Border)\" bordered={false} style={{ width: 300 }}>\n            <p>Email Address : {user.authentication.user.email}</p>\n              <p>First Name : {user.authentication.user.firstName}</p>\n              <p>Last Name : {user.authentication.user.lastName}</p>\n            </Card>\n\n            <Card\n              title=\"User information (Basic card)\"\n              // extra={<a href=\"#\">More</a>}\n              style={{ width: 400, marginTop: '20px' }}\n            >\n              <p>Email Address : {user.authentication.user.email}</p>\n              <p>First Name : {user.authentication.user.firstName}</p>\n              <p>Last Name : {user.authentication.user.lastName}</p>\n            </Card>\n\n            <Card style={{ width: 300 , marginTop: '20px'}}>\n            <p>Email Address : {user.authentication.user.email}</p>\n              <p>First Name : {user.authentication.user.firstName}</p>\n              <p>Last Name : {user.authentication.user.lastName}</p>\n            </Card>\n\n            <Card title=\"Customized Card\" hoverable style={{ width: 240, marginTop: '20px' }}\n              cover={<img alt=\"Profile pic\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\n              >\n              <Meta title=\"Login Page Example\" description=\"www.something.com\" />\n              </Card>\n            </div>\n\n            <div style={{ background: '#ECECEC', padding: '30px' }}>\n              <Row gutter={16}>\n                <Col span={8}>\n                  <Card title=\"Email Address\" bordered={false}>{user.authentication.user.email}</Card>\n                </Col>\n                <Col span={8}>\n                  <Card title=\"FirstName\" bordered={false}>{user.authentication.user.firstName}</Card>\n                </Col>\n                <Col span={8}>\n                  <Card title=\"LastName\" bordered={false}>{user.authentication.user.lastName}</Card>\n                </Col>\n              </Row>\n            </div>\n\n            <div style={{ background: '#ECECEC' }}>\n        <Switch checked={!loading} onChange={this.onChange} />\n\n        <Card style={{ width: 300, marginTop: 16 }} loading={loading}>\n          <Meta\n            avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n            title=\"User info\"\n            description=\"Logged in User\" \n          />\n        </Card>\n\n        <Card\n          style={{ width: 300, marginTop: 20 }}\n          actions={[<Icon type=\"setting\" />, <Icon type=\"edit\" />, <Icon type=\"ellipsis\" />]}\n        >\n          <Skeleton loading={loading} avatar active>\n            <Meta\n              avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n              title=\"User info\"\n              description=\"Logged in User\"\n            />\n          </Skeleton>\n        </Card>\n      </div>\n\n          \n          </div>\n        )\n    }\n}\n\nexport default Table1;\n\n\n  ","import React from 'react';\nimport {store} from '../store/configureStore';\nimport { Table } from 'antd';\nimport 'antd/lib/table/style/css';\n\nclass OtherUsers extends React.Component {\n    constructor(props){\n        super(props);\n        \n        let filtersID = [];\n        let filtersEmail = [];\n        let filtersFirstName = []; \n        let filtersLastName = [];\n        const users = store.getState();\n        var actualUser = {\n            firstName: users.authentication.user.firstName,\n            lastName: users.authentication.user.lastName,\n            email: users.authentication.user.email,\n            id: users.authentication.user.id\n        };;\n        actualUser.key = actualUser.id;\n        delete actualUser['token'];\n\n        var usersArr = users.users.items.filter(data => {\n            delete data['password'];\n            delete data['confirmPassword'];\n            data.key = data.id;\n            return JSON.stringify(data) !== JSON.stringify(actualUser)\n        })\n        usersArr.map(data => {\n            filtersID.push({ text: data.id, value: data.id });\n            filtersEmail.push({ text: data.email, value: data.email});\n            filtersFirstName.push({ text: data.firstName, value: data.firstName });\n            filtersLastName.push({ text: data.lastName, value: data.lastName });\n            return {\n                filtersID, filtersEmail, filtersFirstName, filtersLastName\n            }\n\n        });\n\n        this.columns = [{\n            title: 'id',\n            dataIndex: 'id',\n            key: 'id',\n            sorter: (a,b) => a.id - b.id\n          }, {\n            title: 'email',\n            dataIndex: 'email',\n            key: 'email',\n            filters: filtersEmail,\n            filterMultiple: false,\n            onFilter: (value, record) => record.email.indexOf(value) === 0,\n            sorter: (a,b) => a.email.length - b.email.length\n          }, {\n            title: 'firstName',\n            dataIndex: 'firstName',\n            key: 'firstName',\n            filters: filtersFirstName,\n            filterMultiple: false,\n            onFilter: (value, record) => record.firstName.indexOf(value) === 0,\n            sorter: (a,b) => a.firstName.length - b.firstName.length\n          }, {\n            title: 'lastName',\n            dataIndex: 'lastName',\n            key: 'lastName',\n            filters: filtersLastName,\n            filterMultiple: false,\n            onFilter: (value, record) => record.lastName.indexOf(value) === 0,\n            sorter: (a,b) => a.lastName.length - b.lastName.length\n          }];\n\n          this.dataSource = usersArr;\n    }\n\n    render(){\n        return(\n            <Table dataSource={this.dataSource} columns={this.columns} />\n        )\n    }\n}\n\nexport default OtherUsers;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Error extends React.Component {\n\n    render() {\n        return (\n            <div>\n                <br />\n                <h3 className=\"err\">{this.props.location.state}</h3>\n                <br />\n                <Link className=\"cancelbtn\" to='/'>Go Home</Link>\n            </div>\n        )\n    }\n}\n\nexport default Error;","import React from 'react';\nimport { Route, Router } from 'react-router-dom';\nimport Login from './components/Login';\nimport DashBoard from './components/Dashboard';\nimport { history } from './helpers/history';\nimport { connect } from 'react-redux';\nimport SignUp from './components/SignUp';\nimport Table from './components/Table';\nimport OtherUsers from './components/OtherUsers';\nimport Error1 from './components/Error';\n\n\nclass App extends React.Component {\n    render() {\n      const user1 = localStorage.getItem('user');\n        return (\n            <Router history={history}>\n                <div>\n                  <Route path=\"/index.html\" exact component={Login} />\n                    {user1 ? <Route path=\"/\" component={DashBoard} exact user={user1}/> : <Route path=\"/\" component={Login} exact={true} />}\n                    <Route path=\"/signup\" component={SignUp} exact={true}/>\n                    <Route path=\"/userInfo\" component={Table} exact={true}/>\n                    <Route path=\"/other\" component={OtherUsers} exact={true} />\n                    <Route path=\"/error\" component={Error1} exact={true} />\n                </div>\n            </Router>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = (state) => {\n  const { users, authentication } = state;\n  const { user } = authentication;\n  return {\n      user,\n      users\n  };\n}\n\nexport default connect(mapStateToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const users = [];\r\n\r\nexport function configureFakeBackend() {\r\n\r\n    if(!window.indexedDB){\r\n        console.log(\"not supported\");\r\n    }\r\n\r\n    let request = window.indexedDB.open(\"LoginPage4\", 1),\r\n            db,\r\n            tx,\r\n            store,\r\n            index;\r\n\r\n    request.onupgradeneeded = function(e) {\r\n        db = request.result;\r\n        store = db.createObjectStore('UserDataStore', { keyPath: 'id', autoIncrement: true});\r\n        index = store.createIndex(\"firstName\", \"firstName\", { unique: false });\r\n    }\r\n\r\n    request.onerror = function(e) {\r\n        console.log(\"There was an error: \"+ e.target.errorCode);\r\n    }\r\n\r\n    request.onsuccess = function(e) {\r\n        db = request.result;\r\n        tx = db.transaction(\"UserDataStore\", \"readwrite\");\r\n        store = tx.objectStore(\"UserDataStore\");\r\n        index = store.index(\"firstName\");\r\n    \r\n        db.onerror = function(e) {\r\n            console.log(\"Error: \"+e.target.errorCode);\r\n        }\r\n    \r\n        let q1 = store.getAll();\r\n\r\n        tx.onerror = function(e) {\r\n            console.log(e.target);\r\n        }\r\n    \r\n        q1.onsuccess = function() {\r\n            q1.result.map(data => users.push(data));\r\n        };\r\n    \r\n        tx.oncomplete = function() {\r\n            db.close()        \r\n        }\r\n    }\r\n\r\n    console.log(users);\r\n\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(() => {\r\n\r\n                // authenticate\r\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.email === params.email && user.password === params.password;\r\n                    });\r\n\r\n\r\n                    if (filteredUsers.length) {\r\n                        \r\n                        // if login details are valid return user details and fake jwt token\r\n                        let user = filteredUsers[0];\r\n                    \r\n                        let responseJson = {\r\n                            id: user.id,\r\n                            email: user.email,\r\n                            firstName: user.firstName,\r\n                            lastName: user.lastName,\r\n                            token: 'fake-jwt-token'\r\n                        };\r\n\r\n                        \r\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(responseJson)) });\r\n                    } else {\r\n                        // else return error\r\n                        reject('Email or password is incorrect');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // get users\r\n                if (url.endsWith('/users') && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\r\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(users))});\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // pass through any requests not handled above\r\n                realFetch(url, opts).then(response => {\r\n                    resolve(response)\r\n                });\r\n\r\n            }, 500);\r\n        });\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/styles.css';\nimport {store, persistor} from './store/configureStore';\nimport { Provider } from 'react-redux';\nimport { configureFakeBackend } from './helpers/_helpers';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nconfigureFakeBackend();\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App />\n        </PersistGate>\n    </Provider>\n    \n, document.getElementById('root'));\nserviceWorker.register();\n"],"sourceRoot":""}